---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume
  labels:
    app: resume
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resume
  template:
    metadata:
      labels:
        app: resume
    spec:
      nodeSelector:
        instance: home
      containers:
      - name: resume
        image: 190928636648.dkr.ecr.us-west-2.amazonaws.com/resume:latest
        ports:
        - containerPort: 8000
          name: http
        volumeMounts:
        - name: resume-markdown
          mountPath: /home/appuser/RESUME.md
          subPath: RESUME.md
      imagePullSecrets:
      - name: aws-registry
      volumes:
      - name: resume-markdown
        configMap:
          name: resume-markdown
---
apiVersion: v1
kind: Service
metadata:
  name: resume-service
spec:
  selector:
    app: resume
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snake
  labels:
    app: snake
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snake
  template:
    metadata:
      labels:
        app: snake
    spec:
      nodeSelector:
        instance: home
      containers:
      - name: snake
        image: public.ecr.aws/i9m8a4n0/cycle-snake:latest
        ports:
        - containerPort: 3000
          name: app
---
apiVersion: v1
kind: Service
metadata:
  name: snake-service
spec:
  selector:
    app: snake  # Assuming your snake pod has a label app=snake
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000  # Adjust this to the port your snake pod listens on
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: label
  labels:
    app: label
spec:
  replicas: 1
  selector:
    matchLabels:
      app: label
  template:
    metadata:
      labels:
        app: label
    spec:
      nodeSelector:
        instance: home
      containers:
      - name: label
        image: 190928636648.dkr.ecr.us-west-2.amazonaws.com/label-printer:latest
        ports:
        - containerPort: 8080
          name: app
        volumeMounts:
        - name: usb-lp0
          mountPath: /dev/usb/lp0
        securityContext:
          privileged: true
      imagePullSecrets:
      - name: aws-registry

      volumes:
      - name: usb-lp0
        hostPath:
          path: /dev/usb/lp0
          type: CharDevice
---
apiVersion: v1
kind: Service
metadata:
  name: label-service
spec:
  selector:
    app: label
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080  # Adjust this to the port your snake pod listens on
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app
  # annotations:
  #   cert-manager.io/issuer: "letsencrypt-staging"
spec:
  ingressClassName: "traefik"
  # tls:
  # - hosts:
  #   - samkorn.xyz
  #   - samkorn.me
  #   secretName: xyz-app-tls
  rules:
  - host: samkorn.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: resume-service
            port:
              number: 8000
  # - host: samkorn.me
  #   http:
  #     paths:         
  #     - path: /
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: snake-service
  #           port:
  #             number: 3000
  - host: samkorn.xyz
    http:
      paths:         
      - path: /
        pathType: Prefix
        backend:
          service:
            name: label-service
            port:
              number: 8080
